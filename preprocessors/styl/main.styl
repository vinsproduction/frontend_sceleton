
/* 
	===============
	=== PROJECT ===
	===============
*/

/* RESET STYLES */
@import 'normalize.css' 

// MIXins

vendor(prop, args)
	-webkit-{prop} args
	   -moz-{prop} args
	    -ms-{prop} args
	     -o-{prop} args
	        {prop} args

border-radius()
	vendor('border-radius', arguments)

filter()
	vendor('filter', arguments)

box-shadow()
	vendor('box-shadow', arguments)

transition()
	vendor('transition', arguments)

transform()
	vendor('transform', arguments)

transform-origin()
	vendor('transform-origin', arguments)

user-select()
	vendor('user-select', arguments)

background-linear-gradient(startPoint, startColor, startInterval, endColor, endInterval)
	background-color startColor
	background-image -webkit-gradient(linear, deprecatedWebkitStartPoint, deprecatedWebkitEndPoint, color-stop(startInterval, startColor), color-stop(endInterval, endColor))
	background-image -webkit-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
	background-image -moz-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
	background-image -ms-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
	background-image -o-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
	background-image linear-gradient(startPoint, startColor startInterval, endColor endInterval)


block(w = false,h = false)
	display block
	if w
		width (w)px
	if h
		height (h)px
	
block-inline(w = false,h = false)
	display -moz-inline-stack
	display inline-block
	//vertical-align top
	zoom 1
	*display inline
	if w
		width (w)px
	if h
		height (h)px

block-left(w = false,h = false)
	float left
	block-inline()
	if w
		width (w)px
	if h
		height (h)px

block-right(w = false,h = false)
	float right
	block-inline()
	if w
		width (w)px
	if h
		height (h)px

/* FONTS */

@font-face
	font-family 'Ubuntu'
	_fontname = 'ubuntu-r-webfont'
	src url('../fonts/'+ _fontname +'.eot')
	src url('../fonts/'+ _fontname +'.eot?#iefix') format('embedded-opentype')
	src url('../fonts/'+ _fontname +'.svg') format('svg')
	src url('../fonts/'+ _fontname +'.woff') format('woff')
	src url('../fonts/'+ _fontname +'.ttf') format('truetype')
	font-weight normal
	font-style normal



// MAIN CONSTANTS

$mainWidth 		= 1265
$mainHeight 	= 1000
$mainFont 		= 'Ubuntu'

// COLORS

$red		= #ee2e24
$gray		= #ccc

/* STYLES FOR ALL */

p 
	margin 5px 0

textarea, input
	font-family $mainFont
	font-size 20px

textarea:focus, input:focus
	//

/* STYLES - HELPERS */

.hide 
	display none

.clearfix
	clear both

/* BUTTONS */

btn(w = false,h = false)
	if w
		width (w)px
	if h
		height (h)px
	cursor pointer
	text-align center
	border 0
	outline none
	block-inline()
	text-decoration none
	transition(background 0.3s)
	font 11px $mainFont
	padding 5px 10px
	border-radius(5px)

.btn
	btn()
	box-shadow(inset 0 1px 0 rgba(255, 255, 255, 0.3))
	background-linear-gradient(bottom, #ff7200,0%, #ff872b,100%)
	color #FFF
	font-size 24px

	&:hover
		background-linear-gradient(top, #ff7200,0%, #ff872b,100%)


/* STYLES - MAIN */

html
	height 100%

body
	height 100%
	overflow-x hidden
	overflow-y auto
	font-family $mainFont
	
	/* Самый задний фон */

	background-color #0A1018

	// background-repeat no-repeat
	// background-position top center
	// background-attachment fixed

	// -webkit-background-size cover
	// -moz-background-size cover
	// -o-background-size cover
	// background-size cover

	//background-image url('../img/body_bg.jpg')

		
/* Фон с изображением */

body > main
	
	position relative
	min-height 100%
	width 100%
	
	background-image url('../img/bg.jpg')
	background-repeat repeat-x

	// background-position top center
	// background-attachment fixed

	// -webkit-background-size cover
	// -moz-background-size cover
	// -o-background-size cover
	// background-size cover

	// &.bg
	// 	background-image url('../img/bg.jpg')

/* HEADER */
body > main > header
	z-index 2
	width 100%
	height 40px

	background #736B68

	&.fixed
		position fixed
		top 0

	.container
		width  ($mainWidth)px
		height (40 - 12*2)px
		padding 12px 0
		margin 0 auto

		background #C1B0A3

		.content
			padding 0 5px
			block-inline()
			width  ($mainWidth - 5*2)px

			nav#menu
				block-right()
				text-transform uppercase
				
				a 
					text-decoration none
					block-inline()
					position relative
					color #FFF

				ul
					list-style-type none
					float left
					padding 0
					li
						float left
						margin 0 50px 0 0
						&:last-child
							margin 0

			.logo
				block-left()
				margin-top -6px


/* FOOTER */
body > main > footer
	position absolute
	bottom 0
	z-index 2
	width 100%
	height 40px

	background #736B68

	&.fixed
		position fixed
		bottom 0

	.container
		width  ($mainWidth)px
		height (40 - 7*2)px
		padding 7px 0
		margin 0 auto

		background #C1B0A3

		.content
			padding 0 5px
			block-inline()


/* SECTIONS */
body > main > .sections

	clear both
	width 100%
	padding-bottom 40px // Height of the footer

	// Для всех секций!
	> section

		clear both
		position relative
		z-index 1
		width 100%
		block-inline()

		.container
			position relative
			width  ($mainWidth)px
			height 100%
			margin 0 auto

			background #F2E5D5

			.content
				block-inline()


/* -------------------- Let's go -------------------- */

section#index
	.container
		.content
			padding 50px 5px
			width ($mainWidth - 5*2)px

//TUTORIALS (REMOVE THIS)

section#test-render
	.content
		block(auto,130px)
		border 1px solid rgb(193, 176, 163)
		h1
			padding 50px 0

section#grid-2
	.content
		padding 10px 5px
		overflow hidden

		contentWidth = $mainWidth - 5*2
		width (contentWidth)px
		
		.articles

			block-inline()

			gridcolcount = 2 // кол-во колонок
			gridmarginbetween = 7 // отступ в px между колонками

			// Таким образом можно не давать последнему итему margin-right: 0
			width (contentWidth + gridmarginbetween)px

			article

				block-left()
				position relative
				margin-top 5px
				height 150px
				background #CCC

				gridmargincount = gridcolcount - 1 // кол-во отступов между колонок
				articlewidth = (contentWidth - gridmarginbetween*gridmargincount)/gridcolcount
				margin-right (gridmarginbetween)px
				width (articlewidth)px
				

				// for row in 2 4 6 8 10 // Или так например!
				// 	&:nth-child({row})
				// 		margin-right 0

section#grid-3

	@extends section#grid-2 // наследуем свойства выше

	.content

		contentWidth = $mainWidth - 5*2
		width (contentWidth)px

		.articles

			gridcolcount = 3 // кол-во колонок
			gridmarginbetween = 7 // отступ в px между колонками

			// Таким образом можно не давать последнему итему margin-right: 0
			width (contentWidth + gridmarginbetween)px

			article
				
				gridmargincount = gridcolcount - 1 // кол-во отступов между колонок
				articlewidth = (contentWidth - gridmarginbetween*gridmargincount)/gridcolcount
				margin-right (gridmarginbetween)px
				width (articlewidth)px


section#grid-6

	@extends section#grid-2

	.content

		contentWidth = $mainWidth - 5*2
		width (contentWidth)px

		.articles

			gridcolcount = 6 // кол-во колонок
			gridmarginbetween = 7 // отступ в px между колонками

			// Таким образом можно не давать последнему итему margin-right: 0
			width (contentWidth + gridmarginbetween)px

			article

				gridmargincount = gridcolcount - 1 // кол-во отступов между колонок
				articlewidth = (contentWidth - gridmarginbetween*gridmargincount)/gridcolcount
				margin-right (gridmarginbetween)px
				width (articlewidth)px



section#grid-12

	@extends section#grid-2

	.content
		contentWidth = $mainWidth - 5*2
		width (contentWidth)px

		.articles

			gridcolcount = 12 // кол-во колонок
			gridmarginbetween = 7 // отступ в px между колонками

			// Таким образом можно не давать последнему итему margin-right: 0
			width (contentWidth + gridmarginbetween)px

			article

				gridmargincount = gridcolcount - 1 // кол-во отступов между колонок
				articlewidth = (contentWidth - gridmarginbetween*gridmargincount)/gridcolcount
				margin-right (gridmarginbetween)px
				width (articlewidth)px
	



/* -------------------- MEDIA -------------------- */

@media (max-height: 768px)
	
	#debugBox .mediaHeight:after
		content '@media(max-height: 768px)'